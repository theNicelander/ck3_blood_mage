# lifedrain event
# See dashboard on how the duel calculations are done
# https://share.streamlit.io/thenicelander/ck3_blood_mage_viz/main

namespace = bm_trait_drain

bm_trait_drain.001 = {
	type = character_event
	title = bm_trait_drain.001.title
	desc = bm_trait_drain.001.desc
	theme = witchcraft
	
	# Intellect drain -- Gain quick / intelligent / genius
	option = {
		name = bm_trait_drain.001.b
		trigger = { scope:recipient = { has_trait = intellect_good } }
		# Cost
		add_piety = trait_drain_intellect_cost
		add_stress = trait_drain_stress_cost

		# Carry out logic
		duel = {
			skill = learning
			target = scope:recipient
			0 = {
				
				# Multiplier increases as your blood mage power increases
				compare_modifier = {
					value = scope:duel_value
					multiplier = blood_mage_rank_multiplier
				}

				# Base chance increases as your blood mage power increases 
				modifier = { add = blood_mage_rank_base }

				desc = "I drain their intellect"

				# Draining the last level of a levellable trait costs piety level
				if = { limit = { has_trait = intellect_good_2 } add_piety_level = -1 }

				# Success! Level up trait :)
				intellect_drain_trait_effects = yes
			}
			10 = {
				desc = "I fail"
				temporary_negative_lifeforce_effect = yes

				modifier = { add = trait_drain_modifer_per_trait }
			}
		}

		sacrifice_prisoner_effect = {
			VICTIM = scope:recipient
			EXECUTIONER = scope:actor
		}
		ai_chance = {
			base = 100
		}
		
	}

	# Strength drain -- Gain hale / robust / (amazonian or herculean)
	option = {
		name = bm_trait_drain.001.c
		trigger = { scope:recipient = { has_trait = physique_good } }

		# Cost
		add_piety = trait_drain_physique_cost
		add_stress = trait_drain_stress_cost

		# Carry out logic
		duel = {
			skill = learning
			target = scope:recipient
			0 = {
				
				# Multiplier increases as your blood mage power increases
				compare_modifier = {
					value = scope:duel_value
					multiplier = blood_mage_rank_multiplier
				}

				# Base chance increases as your blood mage power increases 
				modifier = { add = blood_mage_rank_base }

				desc = "I drain their strength"

				# Draining the last level of a levellable trait costs piety level
				if = { limit = { has_trait = physique_good_2 } add_piety_level = -1 }

				# Success! Level up trait :)
				physique_drain_trait_effects = yes
			}
			10 = {
				desc = "I fail"
				temporary_negative_lifeforce_effect = yes

				modifier = { add = trait_drain_modifer_per_trait }
			}
		}
		

		sacrifice_prisoner_effect = {
			VICTIM = scope:recipient
			EXECUTIONER = scope:actor
		}
		ai_chance = {
			base = 100
		}
	}

	# Beauty drain -- Gain comely / (pretty or handsome) / beautiful 
	option = {
		name = bm_trait_drain.001.d
		trigger = { scope:recipient = { has_trait = beauty_good } }

		# Cost
		add_piety = trait_drain_beauty_cost
		add_stress = trait_drain_stress_cost

		# Carry out logic
		duel = {
			skill = learning
			target = scope:recipient
			0 = {
				
				# Multiplier increases as your blood mage power increases
				compare_modifier = {
					value = scope:duel_value
					multiplier = blood_mage_rank_multiplier
				}

				# Base chance increases as your blood mage power increases 
				modifier = { add = blood_mage_rank_base }

				desc = "I drain their beauty"

				# Draining the last level of a levellable trait costs piety level
				if = { limit = { has_trait = beauty_good_2 } add_piety_level = -1 }

				# Success! Level up trait :)
				beauty_drain_trait_effects = yes
			}
			10 = {
				desc = "I fail"
				temporary_negative_lifeforce_effect = yes

				modifier = { add = trait_drain_modifer_per_trait }
			}
		}
		
		sacrifice_prisoner_effect = {
			VICTIM = scope:recipient
			EXECUTIONER = scope:actor
		}
		ai_chance = {
			base = 100
		}
	}

	# Fecund drain
	option = {
		name = bm_trait_drain.001.e
		trigger = { scope:recipient = { has_trait = fecund } }
		
		# Cost
		add_piety = trait_drain_base_piety_cost
		add_stress = trait_drain_stress_cost

		scope:actor = {
			# Carry out logic
			duel = {
				skill = learning
				value = 0
				0 = {
					# Multiplier increases as your blood mage power increases
					compare_modifier = {
						value = scope:duel_value
						multiplier = blood_mage_rank_multiplier
					}
	
					# Base chance increases as your blood mage power increases 
					modifier = { add = blood_mage_rank_base }
	
					desc = "Nice"
		
					# Success!
					add_trait = fecund
				}
				10 = {
					desc = "I fail"
					temporary_negative_lifeforce_effect = yes
	
					modifier = { add = trait_drain_modifer_per_trait }
				}
			}
		}

		sacrifice_prisoner_effect = {
			VICTIM = scope:recipient
			EXECUTIONER = scope:actor
		}
		ai_chance = {
			base = 100
		}
	}

	# Giant drain 
	option = {
		name = bm_trait_drain.001.f
		trigger = { scope:recipient = { has_trait = giant } }

		# Cost
		add_piety = trait_drain_base_piety_cost
		add_stress = trait_drain_stress_cost

		scope:actor = {
			# Carry out logic
			duel = {
				skill = learning
				value = 0
				0 = {
					# Multiplier increases as your blood mage power increases
					compare_modifier = {
						value = scope:duel_value
						multiplier = blood_mage_rank_multiplier
					}
	
					# Base chance increases as your blood mage power increases 
					modifier = { add = blood_mage_rank_base }
	
					desc = "I become a Giant"
		
					# Success!
					add_trait = giant
				}
				10 = {
					desc = "I fail"
					temporary_negative_lifeforce_effect = yes
	
					modifier = { add = trait_drain_modifer_per_trait }
				}
			}
		}
		
		sacrifice_prisoner_effect = {
			VICTIM = scope:recipient
			EXECUTIONER = scope:actor
		}
		ai_chance = {
			base = 100
		}
	}

	# Pure Blood drain
	option = {
		name = bm_trait_drain.001.g
		trigger = { scope:recipient = { has_trait = pure_blooded } }
		
		# Cost
		add_piety = trait_drain_base_piety_cost
		add_stress = trait_drain_stress_cost

		scope:actor = {
			# Carry out logic
			duel = {
				skill = learning
				value = 0
				0 = {
					# Multiplier increases as your blood mage power increases
					compare_modifier = {
						value = scope:duel_value
						multiplier = blood_mage_rank_multiplier
					}
	
					# Base chance increases as your blood mage power increases 
					modifier = { add = blood_mage_rank_base }
	
					desc = "I become a pure blooded"
		
					# Success!
					add_trait = pure_blooded
				}
				10 = {
					desc = "I fail"
					temporary_negative_lifeforce_effect = yes
	
					modifier = { add = trait_drain_modifer_per_trait }
				}
			}
		}
		
		sacrifice_prisoner_effect = {
			VICTIM = scope:recipient
			EXECUTIONER = scope:actor
		}
		ai_chance = {
			base = 100
		}
	}

	# Do nothing
	option = {
		add_piety = lifedrain_piety_cost
		name = bm_trait_drain.001.z 
		ai_chance = {
			base = 1
		}
	}

	# Portraits
	left_portrait ={
		character = root
		animation = rage
	}
	right_portrait ={
		character = scope:recipient
		animation = beg
	}
}
