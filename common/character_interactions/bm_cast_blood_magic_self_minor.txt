bm_cast_blood_magic_self_channel_minor_lifeforce = {
    category = interaction_category_friendly
    auto_accept = yes
    common_interaction = yes
    interface_priority = 888
    send_name = bm_cast_blood_magic_self_channel_minor_lifeforce
    desc = bm_cast_blood_magic_self_channel_minor_lifeforce_desc

    cooldown = { years = 2 }
    cost = { piety = 75 }

    is_shown = {
        scope:actor = { has_trait = lifestyle_blood_mage }
        scope:actor = scope:recipient 
    }
    is_valid_showing_failures_only = { 
        scope:actor = { has_character_modifier = lifeforce_modifier_minor }
    }

    on_accept = {
        debug_log = debug_log.blood_mage_log
        scope:actor = {
            trigger_event = { id = bm_channel_lifeforce_enlightenment_minor.001 }
            remove_character_modifier = lifeforce_modifier_minor
            add_xp_enlightenment = yes
            add_piety = -75
            custom_tooltip = channel_lifeforce_enlightenment_minor.effects_list
        }
    }

    ai_targets = { ai_recipients = self }
    ai_potential = { always = yes }
    ai_frequency = 6
    ai_will_do = {
        base = 10
        modifier = { # only do if healthy
            add = -100
            scope:actor = {health <= fine_health} 
        }
    }
}

bm_cast_blood_magic_self_attune_lifeforce = {
    category = interaction_category_friendly
    auto_accept = yes
    common_interaction = yes
    interface_priority = 888
    send_name = bm_cast_blood_magic_self_attune_lifeforce
    desc = bm_cast_blood_magic_self_attune_lifeforce_desc

    cooldown = { years = 5 }
    cost = { piety = 25 }

    is_shown = {
        scope:actor = { has_trait = lifestyle_blood_mage }
        scope:actor = scope:recipient 
    }
    is_valid_showing_failures_only = { 
        scope:actor = { has_character_modifier = lifeforce_modifier_minor }
    }

    on_accept = {
        
        scope:actor = {debug_log = debug_log.blood_mage_log}
        scope:actor = {
            trigger_event = { id = bm_attune_lifeforce.001 } 
            remove_character_modifier = lifeforce_modifier_minor
            add_piety = -25
            custom_tooltip = bm_attune_lifeforce.effects_list
        }
    }

    ai_targets = { ai_recipients = self }
    ai_potential = { always = yes }
    ai_frequency = 6
    ai_will_do = {
        base = 10
        modifier = { # only do if healthy
            add = -100
            scope:actor = {health <= fine_health} 
        }
        modifier = { # so we always have at least one attunement going on
            add = 100
            scope:actor = {
                NOT = {
                   has_character_modifier = ancient_attuned
                   has_character_modifier = enlightenment_attuned
                   has_character_modifier = bloodline_attuned
                   has_character_modifier = benediction_attuned
                   has_character_modifier = hematurgy_attuned 
                }
            } 
        }
    }
}
