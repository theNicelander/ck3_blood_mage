golem_duel_effect = {
    add_piety = golem_piety_cost_scaled_by_traits
    duel = {
        skill = learning
        value = 0
        100 = {
            desc = blood_golem.002.success
            compare_modifier = {
                value = scope:duel_value
                multiplier = 5
            }
            send_interface_toast = {
                title = blood_golem.002.success
                left_icon = root
                right_icon = scope:blood_golem
                scope:blood_golem = { add_trait = $TRAIT$ }
            }
        }

        100 = {
            desc = blood_golem.002.fail
            send_interface_toast = {
                title = blood_golem.002.fail
                left_icon = root
                right_icon = scope:blood_golem
                add_piety = golem_piety_cost_scaled_by_traits
            }
            scale_cost_by_number_of_traits_golem_has = yes
        }
        100 = {
            desc = blood_golem.002.fail_crit
            send_interface_toast = {
                title = blood_golem.002.fail_crit
                left_icon = root
                right_icon = scope:blood_golem
                temporary_negative_lifeforce_effect_minor = yes
                add_stress = 10
                add_piety = golem_piety_cost_scaled_by_traits
            }
            scale_cost_by_number_of_traits_golem_has_small = yes
            compare_modifier = {
                value = scope:duel_value
                multiplier = -2
            }
        }
    }
}

golem_duel_effect_level = {
    add_piety = golem_piety_cost_scaled_by_traits
    duel = {
        skill = learning
        40 = {
            desc = blood_golem.002.success
            compare_modifier = {
                value = scope:duel_value
                multiplier = 3
            }
            send_interface_toast = {
                title = blood_golem.002.success
                left_icon = root
                right_icon = scope:blood_golem

                scope:blood_golem = {
                    if = {
                        limit = { NOT = { has_trait = $TRAIT$ } }
                        add_trait = $TRAIT$_1
                    }
                    else = {
                        change_trait_rank = {
                            trait = $TRAIT$
                            rank = 1
                            max = 4
                        }
                    }
                }
            }
        }
        60 = {
            desc = blood_golem.002.fail
            send_interface_toast = {
                title = blood_golem.002.fail
                left_icon = root
                right_icon = scope:blood_golem
                temporary_negative_lifeforce_effect_minor = yes
                add_stress = 10
            }
            scale_cost_by_number_of_traits_golem_has = yes
            
        }
    }
}
